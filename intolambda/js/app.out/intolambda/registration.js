// Compiled by ClojureScript 1.7.228 {:static-fns true, :optimize-constants true}
goog.provide('intolambda.registration');
goog.require('cljs.core');
goog.require('intolambda.form_utils');
goog.require('intolambda.utils');
goog.require('intolambda.ui_components');
intolambda.registration.form_id = "rfd";
intolambda.registration.challenge_id = "ch-id";
intolambda.registration.reg_id = "reg-id";
intolambda.registration.help_id = "help-id";
intolambda.registration.submit_fn = (function intolambda$registration$submit_fn(){
return alert("submit button pressed");
});
intolambda.registration.initial_challenge_component = (function intolambda$registration$initial_challenge_component(initial_challenge){
return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$div,new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$id,intolambda.registration.challenge_id,cljs.core.cst$kw$hidden,true], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$p$thick$mdl_DASH_color_DASH_text_DASH__DASH_primary,"Solve the initial challenge to unlock the registration"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$p$mdl_DASH_color_DASH_text_DASH__DASH_primary,initial_challenge], null)], null);
});
intolambda.registration.build_registration_form = (function intolambda$registration$build_registration_form(form_id,registration_form_fields){
return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$div,new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$id,form_id,cljs.core.cst$kw$hidden,true], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$p$thick$mdl_DASH_color_DASH_text_DASH__DASH_primary,""], null),intolambda.form_utils.build_form_with_checkbox_validation("",null,registration_form_fields,intolambda.registration.submit_fn,"I agree with the terms and conditions.")], null);
});
intolambda.registration.registration_not_open = (function intolambda$registration$registration_not_open(){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$div,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$h5$mdl_DASH_color_DASH_text_DASH__DASH_primary,"registration has not opened yet"], null)], null);
});
intolambda.registration.show_registration_form_and_challenge = (function intolambda$registration$show_registration_form_and_challenge(form_id,ch_id){
intolambda.utils.show_element.cljs$core$IFn$_invoke$arity$1(form_id);

return intolambda.utils.show_element.cljs$core$IFn$_invoke$arity$1(ch_id);
});
intolambda.registration.show_registration = (function intolambda$registration$show_registration(form_id,ch_id,state){
if(cljs.core.truth_(state)){
return intolambda.registration.show_registration_form_and_challenge(form_id,ch_id);
} else {
return intolambda.ui_components.show_modal(intolambda.registration.reg_id);
}
});
intolambda.registration.show_help = (function intolambda$registration$show_help(){
return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$div$mdl_DASH_color_DASH_text_DASH__DASH_primary,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$div,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$span$thick,"defn"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$span," is a macro that allows us to easily define a function. The syntax is:"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$p$with_DASH_whitespace,"(defn fn-name arg-vector fn-comment fn-body)"], null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$div,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$span$thick,"->>"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$span," is a threading macro that inserts x as the last item in the first form and then inserts the first form as last argument in the next form. The syntax is:"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$p$with_DASH_whitespace,"(->> x & forms)"], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$p,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$span$thick,"(f)"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$span," invokes the function f."], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$p,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$span,"A peek at Clojure documentation can be found "], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$span,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$a$mdl_DASH_color_DASH_text_DASH__DASH_teal,new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$href,"http://clojuredocs.org/quickref",cljs.core.cst$kw$target,"_blank"], null),"here."], null)], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$p,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$span,"An online Clojure REPL can be found "], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$span,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$a$mdl_DASH_color_DASH_text_DASH__DASH_teal,new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$href,"http://www.tryclj.com/",cljs.core.cst$kw$target,"_blank"], null),"here."], null)], null)], null)], null);
});
intolambda.registration.call_to_register = (function intolambda$registration$call_to_register(state){
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$div,new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$div$code$mdl_DASH_color_DASH_text_DASH__DASH_primary,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$p,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$span$thick,"(defn "], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$span$thick$mdl_DASH_color_DASH_text_DASH__DASH_accent," register "], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$span,"[participant]"], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$p$secondary_DASH_text_DASH_color$with_DASH_whitespace,"\"register participant to the hackathon\""], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$p$with_DASH_whitespace,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$span,"("], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$span$thick,"->>"], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$p$with_DASH_whitespacex2,"(solve-the-initial-challenge)"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$p$with_DASH_whitespacex2,"(input-contact-details participant)"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$p$with_DASH_whitespacex2,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$span,"(pay-registration-fee)))"], null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$p,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$span$thick,"user>"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$span,"(into-lambda/register me)"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$span,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$button$mdl_DASH_button$mdl_DASH_js_DASH_button$mdl_DASH_button_DASH__DASH_icon$accent_DASH_color,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$on_DASH_click,(function (){
return intolambda.registration.show_registration(intolambda.registration.form_id,intolambda.registration.challenge_id,state);
})], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$i$material_DASH_icons,"touch_app"], null)], null)], null)], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$button$link_DASH_like$mdl_DASH_color_DASH__DASH_white$mdl_DASH_color_DASH_text_DASH__DASH_teal,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$on_DASH_click,(function (){
return intolambda.ui_components.show_modal(intolambda.registration.help_id);
})], null),"I'm new to Clojure. Help me read this!"], null)], null);
});
intolambda.registration.register = (function intolambda$registration$register(registration_form_fields,initial_challenge,state){
return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$div$page_DASH_content,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$h3$dark_DASH_primary_DASH_color$text_DASH_primary_DASH_color,"register"], null),intolambda.ui_components.build_modal(intolambda.registration.reg_id,"registration",intolambda.registration.registration_not_open(),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$action_DASH_name,"OK",cljs.core.cst$kw$action_DASH_fn,cljs.core.partial.cljs$core$IFn$_invoke$arity$2(intolambda.ui_components.close_modal,intolambda.registration.reg_id)], null)], null)),intolambda.ui_components.build_modal(intolambda.registration.help_id,"help",intolambda.registration.show_help(),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$action_DASH_name,"Got it!",cljs.core.cst$kw$action_DASH_fn,cljs.core.partial.cljs$core$IFn$_invoke$arity$2(intolambda.ui_components.close_modal,intolambda.registration.help_id)], null)], null)),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$div$content_DASH_grid$mdl_DASH_grid$mdl_DASH_js_DASH_grid,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$div$mdl_DASH_cell$mdl_DASH_cell_DASH__DASH_4_DASH_col,intolambda.registration.call_to_register(state)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$div$mdl_DASH_cell$mdl_DASH_cell_DASH__DASH_4_DASH_col,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [intolambda.registration.initial_challenge_component,initial_challenge], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$div$mdl_DASH_cell$mdl_DASH_cell_DASH__DASH_4_DASH_col,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [intolambda.registration.build_registration_form,intolambda.registration.form_id,registration_form_fields], null)], null)], null)], null);
});

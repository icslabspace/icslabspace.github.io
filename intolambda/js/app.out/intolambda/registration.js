// Compiled by ClojureScript 1.7.228 {}
goog.provide('intolambda.registration');
goog.require('cljs.core');
goog.require('cljsjs.material');
goog.require('intolambda.form_utils');
goog.require('intolambda.utils');
goog.require('intolambda.ui_components');
intolambda.registration.form_id = "rfd";
intolambda.registration.challenge_id = "ch-id";
intolambda.registration.reg_id = "reg-id";
intolambda.registration.help_id = "help-id";
intolambda.registration.submit_fn = (function intolambda$registration$submit_fn(){
return alert("submit button pressed");
});
intolambda.registration.initial_challenge_component = (function intolambda$registration$initial_challenge_component(initial_challenge){
return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"div","div",1057191632),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"id","id",-1388402092),intolambda.registration.challenge_id,new cljs.core.Keyword(null,"hidden","hidden",-312506092),true], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p.thick.mdl-color-text--primary","p.thick.mdl-color-text--primary",-1560319012),"Solve the initial challenge to unlock the registration"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p.mdl-color-text--primary","p.mdl-color-text--primary",-841046521),initial_challenge], null)], null);
});
intolambda.registration.build_registration_form = (function intolambda$registration$build_registration_form(form_id,registration_form_fields){
return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"div","div",1057191632),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"id","id",-1388402092),form_id,new cljs.core.Keyword(null,"hidden","hidden",-312506092),true], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p.thick.mdl-color-text--primary","p.thick.mdl-color-text--primary",-1560319012),""], null),intolambda.form_utils.build_form_with_checkbox_validation.call(null,"",null,registration_form_fields,intolambda.registration.submit_fn,"I agree with the terms and conditions.")], null);
});
intolambda.registration.registration_not_open = (function intolambda$registration$registration_not_open(){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"div","div",1057191632),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"h5.mdl-color-text--primary","h5.mdl-color-text--primary",1214812930),"registration has not opened yet"], null)], null);
});
intolambda.registration.show_registration_form_and_challenge = (function intolambda$registration$show_registration_form_and_challenge(form_id,ch_id){
intolambda.utils.show_element.call(null,form_id);

return intolambda.utils.show_element.call(null,ch_id);
});
intolambda.registration.show_registration = (function intolambda$registration$show_registration(form_id,ch_id,state){
if(cljs.core.truth_(state)){
return intolambda.registration.show_registration_form_and_challenge.call(null,form_id,ch_id);
} else {
return intolambda.ui_components.show_modal.call(null,intolambda.registration.reg_id);
}
});
intolambda.registration.show_help = (function intolambda$registration$show_help(){
return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"div.mdl-color-text--primary","div.mdl-color-text--primary",-322504480),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"div","div",1057191632),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"span.thick","span.thick",1786672778),"defn"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"span","span",1394872991)," is a macro that allows us to easily define a function. The syntax is:"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p.with-whitespace","p.with-whitespace",-1598246105),"(defn fn-name arg-vector fn-comment fn-body)"], null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"div","div",1057191632),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"span.thick","span.thick",1786672778),"->>"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"span","span",1394872991)," is a threading macro that inserts x as the last item in the first form and then inserts the first form as last argument in the next form. The syntax is:"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p.with-whitespace","p.with-whitespace",-1598246105),"(->> x & forms)"], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p","p",151049309),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"span.thick","span.thick",1786672778),"(f)"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"span","span",1394872991)," invokes the function f."], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p","p",151049309),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"span","span",1394872991),"A peek at Clojure documentation can be found "], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"span","span",1394872991),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"a.mdl-color-text--teal","a.mdl-color-text--teal",-1624899270),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"href","href",-793805698),"http://clojuredocs.org/quickref",new cljs.core.Keyword(null,"target","target",253001721),"_blank"], null),"here."], null)], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p","p",151049309),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"span","span",1394872991),"An online Clojure REPL can be found "], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"span","span",1394872991),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"a.mdl-color-text--teal","a.mdl-color-text--teal",-1624899270),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"href","href",-793805698),"http://www.tryclj.com/",new cljs.core.Keyword(null,"target","target",253001721),"_blank"], null),"here."], null)], null)], null)], null);
});
intolambda.registration.call_to_register = (function intolambda$registration$call_to_register(state){
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"div","div",1057191632),new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"div.code.mdl-color-text--primary","div.code.mdl-color-text--primary",-930112083),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p","p",151049309),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"span.thick","span.thick",1786672778),"(defn "], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"span.thick.mdl-color-text--accent","span.thick.mdl-color-text--accent",-1279906607)," register "], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"span","span",1394872991),"[participant]"], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p.secondary-text-color.with-whitespace","p.secondary-text-color.with-whitespace",-190303498),"\"register participant to the hackathon\""], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p.with-whitespace","p.with-whitespace",-1598246105),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"span","span",1394872991),"("], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"span.thick","span.thick",1786672778),"->>"], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p.with-whitespacex2","p.with-whitespacex2",1825646007),"(solve-the-initial-challenge)"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p.with-whitespacex2","p.with-whitespacex2",1825646007),"(input-contact-details participant)"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p.with-whitespacex2","p.with-whitespacex2",1825646007),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"span","span",1394872991),"(pay-registration-fee)))"], null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p","p",151049309),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"span.thick","span.thick",1786672778),"user>"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"span","span",1394872991),"(into-lambda/register me)"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"span","span",1394872991),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"button.mdl-button.mdl-js-button.mdl-button--icon.accent-color","button.mdl-button.mdl-js-button.mdl-button--icon.accent-color",908919141),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"on-click","on-click",1632826543),(function (){
return intolambda.registration.show_registration.call(null,intolambda.registration.form_id,intolambda.registration.challenge_id,state);
})], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"i.material-icons","i.material-icons",740058269),"touch_app"], null)], null)], null)], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"button.link-like.mdl-color--white.mdl-color-text--teal","button.link-like.mdl-color--white.mdl-color-text--teal",-1409302363),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"on-click","on-click",1632826543),(function (){
return intolambda.ui_components.show_modal.call(null,intolambda.registration.help_id);
})], null),"I'm new to Clojure. Help me read this!"], null)], null);
});
intolambda.registration.register = (function intolambda$registration$register(registration_form_fields,initial_challenge,state){
return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"div.page-content","div.page-content",-2018247837),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"h3.dark-primary-color.text-primary-color","h3.dark-primary-color.text-primary-color",1044969238),"register"], null),intolambda.ui_components.build_modal.call(null,intolambda.registration.reg_id,"registration",intolambda.registration.registration_not_open.call(null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"action-name","action-name",-1685384433),"OK",new cljs.core.Keyword(null,"action-fn","action-fn",1914929011),cljs.core.partial.call(null,intolambda.ui_components.close_modal,intolambda.registration.reg_id)], null)], null)),intolambda.ui_components.build_modal.call(null,intolambda.registration.help_id,"help",intolambda.registration.show_help.call(null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"action-name","action-name",-1685384433),"Got it!",new cljs.core.Keyword(null,"action-fn","action-fn",1914929011),cljs.core.partial.call(null,intolambda.ui_components.close_modal,intolambda.registration.help_id)], null)], null)),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"div.content-grid.mdl-grid.mdl-js-grid","div.content-grid.mdl-grid.mdl-js-grid",-1368125107),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"div.mdl-cell.mdl-cell--4-col","div.mdl-cell.mdl-cell--4-col",1271270762),intolambda.registration.call_to_register.call(null,state)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"div.mdl-cell.mdl-cell--4-col","div.mdl-cell.mdl-cell--4-col",1271270762),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [intolambda.registration.initial_challenge_component,initial_challenge], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"div.mdl-cell.mdl-cell--4-col","div.mdl-cell.mdl-cell--4-col",1271270762),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [intolambda.registration.build_registration_form,intolambda.registration.form_id,registration_form_fields], null)], null)], null)], null);
});

//# sourceMappingURL=registration.js.map